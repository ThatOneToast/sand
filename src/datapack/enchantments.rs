use std::borrow::Cow;

#[derive(Debug, Clone, PartialEq, Eq, Hash)]
pub enum Enchantment {
    Protection,
    FireProtection,
    FeatherFalling,
    BlastProtection,
    ProjectileProtection,
    Respiration,
    AquaAffinity,
    Thorns,
    DepthStrider,
    FrostWalker,
    BindingCurse,
    Sharpness,
    Smite,
    BaneOfArthropods,
    Knockback,
    FireAspect,
    Looting,
    Sweeping,
    Efficiency,
    SilkTouch,
    Unbreaking,
    Fortune,
    Power,
    Punch,
    Flame,
    Infinity,
    LuckOfTheSea,
    Lure,
    Mending,
    VanishingCurse,
    SoulSpeed,
    SwiftSneak,
    Other(String),
}

impl Enchantment {
    /// Convert from a string to the corresponding VanillaEnchant variant.
    pub fn from_str(enchant: &str) -> Option<Self> {
        match enchant {
            "minecraft:protection" => Some(Self::Protection),
            "minecraft:fire_protection" => Some(Self::FireProtection),
            "minecraft:feather_falling" => Some(Self::FeatherFalling),
            "minecraft:blast_protection" => Some(Self::BlastProtection),
            "minecraft:projectile_protection" => Some(Self::ProjectileProtection),
            "minecraft:respiration" => Some(Self::Respiration),
            "minecraft:aqua_affinity" => Some(Self::AquaAffinity),
            "minecraft:thorns" => Some(Self::Thorns),
            "minecraft:depth_strider" => Some(Self::DepthStrider),
            "minecraft:frost_walker" => Some(Self::FrostWalker),
            "minecraft:binding_curse" => Some(Self::BindingCurse),
            "minecraft:sharpness" => Some(Self::Sharpness),
            "minecraft:smite" => Some(Self::Smite),
            "minecraft:bane_of_arthropods" => Some(Self::BaneOfArthropods),
            "minecraft:knockback" => Some(Self::Knockback),
            "minecraft:fire_aspect" => Some(Self::FireAspect),
            "minecraft:looting" => Some(Self::Looting),
            "minecraft:sweeping" => Some(Self::Sweeping),
            "minecraft:efficiency" => Some(Self::Efficiency),
            "minecraft:silk_touch" => Some(Self::SilkTouch),
            "minecraft:unbreaking" => Some(Self::Unbreaking),
            "minecraft:fortune" => Some(Self::Fortune),
            "minecraft:power" => Some(Self::Power),
            "minecraft:punch" => Some(Self::Punch),
            "minecraft:flame" => Some(Self::Flame),
            "minecraft:infinity" => Some(Self::Infinity),
            "minecraft:luck_of_the_sea" => Some(Self::LuckOfTheSea),
            "minecraft:lure" => Some(Self::Lure),
            "minecraft:mending" => Some(Self::Mending),
            "minecraft:vanishing_curse" => Some(Self::VanishingCurse),
            "minecraft:soul_speed" => Some(Self::SoulSpeed),
            "minecraft:swift_sneak" => Some(Self::SwiftSneak),
            _ => Some(Self::Other(enchant.to_string())),
        }
    }

    /// Convert from a VanillaEnchant variant to its corresponding string.
    pub fn as_str(&self) -> Cow<'static, str> {
        match self {
            Self::Protection => Cow::Borrowed("minecraft:protection"),
            Self::FireProtection => Cow::Borrowed("minecraft:fire_protection"),
            Self::FeatherFalling => Cow::Borrowed("minecraft:feather_falling"),
            Self::BlastProtection => Cow::Borrowed("minecraft:blast_protection"),
            Self::ProjectileProtection => Cow::Borrowed("minecraft:projectile_protection"),
            Self::Respiration => Cow::Borrowed("minecraft:respiration"),
            Self::AquaAffinity => Cow::Borrowed("minecraft:aqua_affinity"),
            Self::Thorns => Cow::Borrowed("minecraft:thorns"),
            Self::DepthStrider => Cow::Borrowed("minecraft:depth_strider"),
            Self::FrostWalker => Cow::Borrowed("minecraft:frost_walker"),
            Self::BindingCurse => Cow::Borrowed("minecraft:binding_curse"),
            Self::Sharpness => Cow::Borrowed("minecraft:sharpness"),
            Self::Smite => Cow::Borrowed("minecraft:smite"),
            Self::BaneOfArthropods => Cow::Borrowed("minecraft:bane_of_arthropods"),
            Self::Knockback => Cow::Borrowed("minecraft:knockback"),
            Self::FireAspect => Cow::Borrowed("minecraft:fire_aspect"),
            Self::Looting => Cow::Borrowed("minecraft:looting"),
            Self::Sweeping => Cow::Borrowed("minecraft:sweeping"),
            Self::Efficiency => Cow::Borrowed("minecraft:efficiency"),
            Self::SilkTouch => Cow::Borrowed("minecraft:silk_touch"),
            Self::Unbreaking => Cow::Borrowed("minecraft:unbreaking"),
            Self::Fortune => Cow::Borrowed("minecraft:fortune"),
            Self::Power => Cow::Borrowed("minecraft:power"),
            Self::Punch => Cow::Borrowed("minecraft:punch"),
            Self::Flame => Cow::Borrowed("minecraft:flame"),
            Self::Infinity => Cow::Borrowed("minecraft:infinity"),
            Self::LuckOfTheSea => Cow::Borrowed("minecraft:luck_of_the_sea"),
            Self::Lure => Cow::Borrowed("minecraft:lure"),
            Self::Mending => Cow::Borrowed("minecraft:mending"),
            Self::VanishingCurse => Cow::Borrowed("minecraft:vanishing_curse"),
            Self::SoulSpeed => Cow::Borrowed("minecraft:soul_speed"),
            Self::SwiftSneak => Cow::Borrowed("minecraft:swift_sneak"),
            Self::Other(enchant) => Cow::Owned(enchant.clone()),
        }
    }
}
